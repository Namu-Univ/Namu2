<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="grade">

	<!-- (교수)강의 - 전체 내 강의 수 조회 -->
	<select id="totalSubjectCount" parameterType="int" resultType="int">
		SELECT COUNT(*) AS CNT   
	            FROM SUBJECT S           
	            JOIN DEPARTMENT D ON S.DEPT_ID = D.ID           
	            WHERE S.PROFESSOR_ID = #{id}      
	</select>
	
	<!-- (교수)강의 - 내 강의 조회 -->
	<select id="proSubList" parameterType="map" resultType="ProSubjectVO">
	    SELECT * FROM (       
	        SELECT INNER_VIEW.*, ROWNUM RN FROM (           
	            SELECT S.ID AS SUB_ID, S.YEAR, S.SEMESTER, D.NAME AS DEPT_NAME,                   
	            S.NAME AS SUB_NAME, S.ROOM, S.GRADES, S.TYPE, S.TIME           
	            FROM SUBJECT S           
	            JOIN DEPARTMENT D ON S.DEPT_ID = D.ID           
	            WHERE S.PROFESSOR_ID = #{id}           
	            ORDER BY S .ID       
	        ) INNER_VIEW   
	    ) WHERE RN BETWEEN #{begin} AND #{end}
	</select>

	<!-- (교수)강의 - 전체 수강중인 학생 목록 수 조회 -->
	<select id="totalEnrollCount" parameterType="EnrollStuVO" resultType="int">
		SELECT COUNT(*) AS CNT 
		FROM STUDENT S
		JOIN ENROLMENT E ON S.ID = E.STU_ID
		JOIN SUBJECT T ON E.SUB_ID = T.ID
		JOIN DEPARTMENT D ON S.DEPT_ID = D.ID
		LEFT JOIN GRADE G ON S.ID = G.STU_ID AND E.SUB_ID = G.SUB_ID
		WHERE T.PROFESSOR_ID = #{userId}
		  AND T.NAME = #{subName}
	</select>
		
	<!-- (교수)강의 - 수강중인 학생 목록 -->
	<select id="enrollStuList" parameterType="EnrollStuVO" resultType="EnrollStuVO">
 		SELECT * FROM (       
	        SELECT INNER_VIEW.*, ROWNUM RN FROM (
		        SELECT ROW_NUMBER() OVER (ORDER BY S.ID) AS IDX, 
					G.RATE AS RATE,
					S.ID AS STU_ID,
					S.GRADE AS GRADE,
					S.SEMESTER, 
					D.NAME AS DEPT_NAME, 
					S.NAME AS STU_NAME, 
					S.TEL, 
					S.GENDER
					FROM STUDENT S
					JOIN ENROLMENT E ON S.ID = E.STU_ID
					JOIN SUBJECT T ON E.SUB_ID = T.ID
					JOIN DEPARTMENT D ON S.DEPT_ID = D.ID
					LEFT JOIN GRADE G ON S.ID = G.STU_ID AND E.SUB_ID = G.SUB_ID
					WHERE T.PROFESSOR_ID = #{userId}
					  AND T.NAME = #{subName}
					ORDER BY S.ID
			) INNER_VIEW   
	    ) WHERE RN BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- (교수)성적 입력 가능여부 -->
	<select id="searchGrade" parameterType="GradeVO">
		SELECT * 
		FROM GRADE
		WHERE STU_ID = #{stuId}
		AND SUB_ID = #{subId};
	</select>
	
	<!-- (교수)성적 입력 -->
	<insert id="insertGrade" parameterType="GradeVO">
		INSERT INTO GRADE (ID, STU_ID, SUB_ID, ABSENT, 
			   MID_EXAM, FIN_EXAM, EX_SCORE, RATE) 
		VALUES (GRADE_SEQ.NEXTVAL, #{stuId}, #{subId}, 
			   #{absent}, #{midExam}, #{finExam}, #{exScore, jdbcType=NUMERIC}, #{rate})
	</insert>
	
	<!-- (학생)강의 - 전체 내 강의 수 조회 -->
	<select id="totalStuSubCount" parameterType="int" resultType="int">
		SELECT COUNT(*) AS CNT 
				FROM STUDENT S
				JOIN ENROLMENT E ON S.ID = E.STU_ID
				JOIN SUBJECT T ON E.SUB_ID = T.ID
				JOIN DEPARTMENT D ON S.DEPT_ID = D.ID
				LEFT JOIN GRADE G ON S.ID = G.STU_ID AND E.SUB_ID = G.SUB_ID
				WHERE S.ID = #{id}
	</select>
	<!-- (학생)강의 - 내 강의 조회-->
	<select id="stuSubList" parameterType="EnrollStuVO" resultType="EnrollStuVO">
		SELECT * FROM (       
		        SELECT INNER_VIEW.*, ROWNUM RN FROM (
					SELECT ROW_NUMBER() OVER (ORDER BY S.ID) AS IDX, 
						G.RATE AS RATE,
						T.YEAR AS YEAR,
						T.SEMESTER,
			            T.NAME AS SUB_NAME,
			            T.ROOM AS ROOM,
			            T.GRADES AS GRADE,
			            T.TIME AS TIME
					FROM STUDENT S
					JOIN ENROLMENT E ON S.ID = E.STU_ID
					JOIN SUBJECT T ON E.SUB_ID = T.ID
					JOIN DEPARTMENT D ON S.DEPT_ID = D.ID
					LEFT JOIN GRADE G ON S.ID = G.STU_ID AND E.SUB_ID = G.SUB_ID
					WHERE S.ID = #{userId}
					ORDER BY S.ID
				) INNER_VIEW   
	    ) WHERE RN BETWEEN #{begin} AND #{end}
	</select>
	
</mapper>